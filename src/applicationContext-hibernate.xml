<?xml version="1.0" encoding="GBK" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
	
	<!--Hibernate TransactionManager-->
	<!-- 将事物交给spring进行管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 配置SessionFactory,由Spring容器来管理Hibernate -->
    <!-- 非Annotation时,使用org.springframework.orm.hibernate3.LocalSessionFactoryBean,
       	    它注入实体类的方式是setMappingResources(),而Hibernate Annotation所用的映射方式
                               不是mapping resource,而是mapping class,这就要用到LocalSessionFactoryBean的子类
         AnnotationSessionFactoryBean了.因为AnnotationSessionFactoryBean它支持实体的注入
                             方式setAnnotatedClasses,即对应Hibernate中的mapping class.参见这两个类的源代码. -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		
		<!-- 指定pojo对应的映射文件 -->
		<property name="mappingLocations" value="classpath:com/web/pojo/**/*.hbm.xml"/>
		
		<!-- Hibernate相关配置 -->
		<property name="hibernateProperties">
			<props>
			
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 	<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.HashtableCacheProvider
				</prop>

				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop> -->
			</props>
		</property>
	</bean>
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 同一时间可以从池分配的最多连接数量,设置为0时表示无限制   -->
		<property name="maxActive" value="${jdbc.maxActive}" />
	</bean>
	
	<!-- 注入hibernateTemplate -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
	
</beans>